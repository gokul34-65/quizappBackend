spring.application.name=quiz-app

# Server Configuration
server.port=8080

# PostgreSQL Configuration
# Update these values according to your PostgreSQL setup
spring.datasource.url=jdbc:postgresql://localhost:5432/quizdb
spring.datasource.username=postgres
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Gemini API Configuration
# IMPORTANT: Get your API key from: https://aistudio.google.com/app/apikey
# SECURITY WARNING: Never commit your real API key to version control!
# Use environment variables in production: ${GEMINI_API_KEY}
gemini.api.key=AIzaSyANq08yypYT1DkU50iVrf7FHSGiCGrTvdc
# Using Gemini 2.5 Flash - Best for structured outputs and thinking tasks
# This model has thinking capabilities that improve JSON generation
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent

# Logging Configuration
logging.level.com.saanya.quiz_app=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.reactive.function.client=DEBUG